stages:
  - lint
  - test
  - build
  - deploy

variables:
  NODE_VERSION: '20'

before_script:
  - npm install -g npm@latest

lint_frontend:
  stage: lint
  image: node:${NODE_VERSION}
  script:
    - cd frontend
    - npm install
    - npm run lint

lint_backend:
  stage: lint
  image: node:${NODE_VERSION}
  script:
    - cd backend
    - npm install
    - npm run lint

test_frontend:
  stage: test
  image: node:${NODE_VERSION}
  script:
    - cd frontend
    - npm install
    - npm run test:coverage
  artifacts:
    reports:
      coverage_report: coverage/cobertura-coverage.xml
    paths:
      - coverage
    expire_in: 1 week

test_backend:
  stage: test
  image: node:${NODE_VERSION}
  script:
    - cd backend
    - npm install
    - npm run test:cov
  artifacts:
    reports:
      coverage_report: coverage/cobertura-coverage.xml
    paths:
      - coverage
    expire_in: 1 week

build_frontend:
  stage: build
  image: node:${NODE_VERSION}
  script:
    - cd frontend
    - npm install
    - npm run build
  artifacts:
    paths:
      - frontend/.next
    expire_in: 1 week

build_backend:
  stage: build
  image: node:${NODE_VERSION}
  script:
    - cd backend
    - npm install
    - npm run build
  artifacts:
    paths:
      - backend/dist
    expire_in: 1 week

deploy:
  stage: deploy
  image: docker:latest
  services:
    - docker:dind
  script:
    - docker-compose -f docker-compose.yml up -d
  only:
    - main
